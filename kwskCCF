<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>CCF Rev.1.2.8</title>
<style type="text/css">  
  input[type="button"], input[type="submit"] {
    -webkit-appearance: none;
    border-radius: 5px;
    border: 1px solid #DDD;
    cursor: pointer;
  }
</style>
</head>
<body>
<form name="ctrl">
  <input type="button" id="button-reset" name="button-reset" value="RESET" onClick="freset()" style="width:16%; height:75px; font-size:14px; display:inline; text-align:center; color:#fff; background-color:#8FBC8F"/>
  <input type="button" id="button-cc" name="button-cc" value="CHEST COMPRESSION" onClick="ftoggle()" style="width:65%; height:75px; font-size:14px; display:inline; text-align:center; color:#fff; background-color:#8FBC8F"/>
  <input type="button" id="button-cpr" name="button-cpr" value="CPR" onClick="foncpr()" style="width:16%; height:75px; font-size:14px; display:inline; text-align:center; color:#fff; background-color:#8FBC8F"/>
</form>

<form name="ccf">
  <span style="color:#000000; font-size:152px; font-family:monospace"><div id="time_cpr">cpr</div><div id="time_cc">cc</div></span>
  <span style="color:#228B22; font-size:304px; font-family:monospace"><div id="rate">rate</div></span>
  <span style="color:#000000; font-size:24px; font-family:monospace"><div id="log_interruption"></div></span>
</form>

<script type="text/javascript">

  // Variables
  var cpr, cc, rate;
  var time_now, time_cpr_start, time_cc_start, time_cc_integrated, press;
  var time_cpr_integrated, oncpr, cpr_hour, cpr_minu, cpr_sec;
  var cc_hour, cc_minu, cc_sec, text_interruption, time_interruption, time_cc_stop, number_interruption;

  // Resize event handler
  window.onresize = function() {
    ffit();
  }

  // Initialization
  fstop();

  // Main loop
  function frw() {
    fcpr();
    fcc();
    frate();
    requestAnimationFrame(frw);
  }

  // Responsive layout adjustment
  function ffit() {
    var ww = window.innerWidth;
    var x;
    x = ww * 0.16;
    document.getElementById('time_cpr').style.fontSize = Math.floor(x) + 'px';
    x = ww * 0.16;
    document.getElementById('time_cc').style.fontSize = Math.floor(x) + 'px';
    x = ww * 0.35;
    document.getElementById('rate').style.fontSize = Math.floor(x) + 'px';
    x = ww * 0.07;
    document.getElementById('log_interruption').style.fontSize = Math.floor(x) + 'px';
    document.getElementById("button-reset").style.width = "16vw";
    document.getElementById("button-cc").style.width = "60vw";
    document.getElementById("button-cpr").style.width = "16vw";
  }

  // Convert seconds to hh:mm:ss.ms format
  function sec_to_hhmmss(n) {
    var hh, mm, ss, ms;
    hh = Math.floor(n / 3600);
    n = n - (hh * 3600);
    mm = Math.floor(n / 60);
    n = n - (mm * 60);
    ss = Math.floor(n / 1);
    n = n - ss;
    ms = Math.floor(n / 0.1);
    return (hh < 10 ? "0" + hh : hh) + ":" + (mm < 10 ? "0" + mm : mm) + ":" + (ss < 10 ? "0" + ss : ss) + "." + ms;
  }

  // CPR time calculation
  function fcpr() {
    time_now = Date.now();
    cpr = (time_now - time_cpr_start) * oncpr + time_cpr_integrated;
    var cpr_hhmmss = sec_to_hhmmss((cpr/1000));
    document.getElementById("time_cpr").innerHTML = cpr_hhmmss;
  }

  // Compression time calculation
  function fcc() {
    time_now = Date.now();
    cc = (time_now - time_cc_start) * press + time_cc_integrated;
    var cc_hhmmss = sec_to_hhmmss((cc/1000));
    document.getElementById("time_cc").innerHTML = cc_hhmmss;
  }

  // Compression rate calculation
  function frate() {
    rate = Math.floor(cc / cpr * (100));
    if (isNaN(rate)){
      rate = 0;
    }
    document.getElementById("rate").innerHTML = rate;
  }

  // Toggle between compression and interruption
  function ftoggle() {
    time_now = Date.now();
    switch (press) {
      case 0:
        time_cc_start = time_now;
        press = 1;
        document.getElementById("button-cc").style.backgroundColor = '#228B22';
        switch (oncpr) {
          case 0:
            time_cpr_start = time_now;
            document.getElementById("button-cpr").style.backgroundColor = '#228B22';
            oncpr = 1;
            break;
          case 1:
            switch (time_cc_stop) {
              case 0:
                time_interruption = cpr;
                flog(time_interruption);
                break;
              default:
                time_interruption = time_now - time_cc_stop;
                flog(time_interruption);
                break;
            }
        }
        break;
      case 1:
        time_cc_integrated = cc;
        time_cc_stop = time_now;
        press = 0;
        document.getElementById("button-cc").style.backgroundColor = '#8FBC8F';
        break;
    }
  }

  // Log interruption time
  function flog(n) {
    number_interruption = number_interruption + 1;
    text_interruption = text_interruption + "<br>[" + number_interruption + "] " + sec_to_hhmmss((n / 1000));
    document.getElementById("log_interruption").innerHTML = text_interruption;
    return n;
  }

  // Start/Stop CPR measurement
  function foncpr() {
    time_now = Date.now();
    switch (oncpr) {
      case 0:
        time_cpr_start = time_now;
        oncpr = 1;
        press = 0;
        document.getElementById("button-cpr").style.backgroundColor = '#228B22';
        break;
      case 1:
        time_cc_integrated = cc;
        time_cpr_integrated = cpr;
        oncpr = 0;
        press = 0;
        document.getElementById("button-cc").style.backgroundColor = '#8FBC8F';
        document.getElementById("button-cpr").style.backgroundColor = '#8FBC8F';
        break;
    }
  }

  // Reset the application
  function freset() {
    document.getElementById("button-cc").style.backgroundColor = '#8FBC8F';
    document.getElementById("button-cpr").style.backgroundColor = '#8FBC8F';
    document.getElementById("log_interruption").innerHTML = "";
    fstop();
  }

  // Initialization
  function fstop() {
    ffit();
    time_now = Date.now();
    cpr = 0;
    cc = 0;
    rate = 0;
    time_interruption = 0;
    time_cc_stop = 0;
    text_interruption = "";
    number_interruption = 0;
    time_cpr_start = Date.now();
    time_cpr_integrated = 0;
    time_cc_integrated = 0;
    time_cc_start = time_now;
    press = 0;
    oncpr = 0;
    frw();
  }

</script>
</body>
</html>
